{"version":3,"sources":["../../src/query_ctrl.js"],"names":["NetXMSDatasourceQueryCtrl","$scope","$injector","uiSegmentSrv","scope","target","type","alarmSource","dciTarget","dci","legend","objectList","dciList","objectId","_","isEmpty","datasource","metricFindQuery","then","result","id","rawQuery","name","panelCtrl","refresh","QueryCtrl","templateUrl"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;;;;;;;IAEaA,yB,WAAAA,yB;;;AAEX,qCAAYC,MAAZ,EAAoBC,SAApB,EAA+BC,YAA/B,EAA8C;AAAA;;AAAA,sJACtCF,MADsC,EAC9BC,SAD8B;;AAG5C,UAAKE,KAAL,GAAaH,MAAb;AACA,UAAKE,YAAL,GAAoBA,YAApB;AACA,UAAKE,MAAL,CAAYC,IAAZ,GAAmB,MAAKD,MAAL,CAAYC,IAAZ,IAAoB,KAAvC;AACA,UAAKD,MAAL,CAAYE,WAAZ,GAA0B,MAAKF,MAAL,CAAYE,WAAtC;AACA,UAAKF,MAAL,CAAYG,SAAZ,GAAwB,MAAKH,MAAL,CAAYG,SAApC;AACA,UAAKH,MAAL,CAAYI,GAAZ,GAAkB,MAAKJ,MAAL,CAAYI,GAA9B;AACA,UAAKJ,MAAL,CAAYK,MAAZ,GAAqB,MAAKL,MAAL,CAAYK,MAAZ,IAAsB,EAA3C;AACA,UAAKC,UAAL,GAAkB,EAAlB;AACA,UAAKC,OAAL,GAAe,EAAf;AACA,UAAKC,QAAL,GAAgB,CAAhB;AAZ4C;AAa7C;;;;iCAGD;AACE,UAAIC,EAAEC,OAAF,CAAU,KAAKJ,UAAf,CAAJ,EACA;AACE,aAAKA,UAAL,GAAkB,KAAKK,UAAL,CAAgBC,eAAhB,CAAgC,EAAhC,EAAoC,gBAApC,EACdC,IADc,CACT,kBAAU;AAAE,iBAAOC,MAAP;AAAgB,SADnB,CAAlB;AAED;AACD,aAAO,KAAKR,UAAZ;AACD;;;8BAGD;AACE,UAAI,KAAKE,QAAL,IAAiB,KAAKR,MAAL,CAAYG,SAAZ,CAAsBY,EAA3C,EACA;AACE,aAAKP,QAAL,GAAgB,KAAKR,MAAL,CAAYG,SAAZ,CAAsBY,EAAtC;AACA,aAAKR,OAAL,GAAe,KAAKI,UAAL,CAAgBC,eAAhB,CAAgC,EAAEZ,QAAQ,KAAKA,MAAL,CAAYG,SAAZ,GAAwB,KAAKH,MAAL,CAAYG,SAAZ,CAAsBY,EAA9C,GAAmD,CAA7D,EAAhC,EAAkG,gBAAlG,EACXF,IADW,CACN,kBAAU;AAAE,iBAAOC,MAAP;AAAgB,SADtB,CAAf;AAED;;AAED,aAAO,KAAKP,OAAZ;AACD;;;uCAGD;AACE,aAAO,KAAKI,UAAL,CAAgBC,eAAhB,CAAgC,EAAhC,EAAoC,QAApC,EACJC,IADI,CACC,kBAAU;AAAE,eAAOC,MAAP;AAAgB,OAD7B,CAAP;AAED;;;uCAEkB;AACjB,WAAKd,MAAL,CAAYgB,QAAZ,GAAuB,CAAC,KAAKhB,MAAL,CAAYgB,QAApC;AACD;;;oCAGD;AACE,WAAKhB,MAAL,CAAYI,GAAZ,GAAkB,EAACa,MAAM,EAAP,EAAWF,IAAI,CAAf,EAAlB;AACD;;;wCAGD;AACE,WAAKG,SAAL,CAAeC,OAAf;AACD;;;;EAzD4CC,c;;AA4D/CzB,0BAA0B0B,WAA1B,GAAwC,4BAAxC","file":"query_ctrl.js","sourcesContent":["import {QueryCtrl} from 'app/plugins/sdk';\nimport './css/query-editor.css!';\nimport './netxms_objects_list_directive';\n\nexport class NetXMSDatasourceQueryCtrl extends QueryCtrl {\n\n  constructor($scope, $injector, uiSegmentSrv)  {\n    super($scope, $injector);\n\n    this.scope = $scope;\n    this.uiSegmentSrv = uiSegmentSrv;\n    this.target.type = this.target.type || 'DCI';\n    this.target.alarmSource = this.target.alarmSource;\n    this.target.dciTarget = this.target.dciTarget;\n    this.target.dci = this.target.dci;\n    this.target.legend = this.target.legend || '';\n    this.objectList = [];\n    this.dciList = [];\n    this.objectId = 0;\n  }\n\n  getObjects() \n  {\n    if (_.isEmpty(this.objectList))\n    {\n      this.objectList = this.datasource.metricFindQuery('', 'datacollection')\n         .then(result => { return result; });\n    }\n    return this.objectList;\n  }\n\n  getDCIs()\n  {\n    if (this.objectId != this.target.dciTarget.id)\n    {\n      this.objectId = this.target.dciTarget.id;\n      this.dciList = this.datasource.metricFindQuery({ target: this.target.dciTarget ? this.target.dciTarget.id : 0 }, 'datacollection')\n         .then(result => { return result; });\n    }\n\n    return this.dciList;\n  }\n\n  getSourceObjects()\n  {\n    return this.datasource.metricFindQuery('', 'alarms')\n      .then(result => { return result; });\n  }\n\n  toggleEditorMode() {\n    this.target.rawQuery = !this.target.rawQuery;\n  }\n\n  clearDciField()\n  {\n    this.target.dci = {name: \"\", id: 0};\n  }\n\n  onSelectionChange()\n  {\n    this.panelCtrl.refresh();\n  }\n}\n\nNetXMSDatasourceQueryCtrl.templateUrl = 'partials/query.editor.html';\n\n"]}