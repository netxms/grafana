{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"net",
				"netxms-object-list"
			],
			[
				"input",
				"inputValue"
			],
			[
				"inp",
				"inputValue"
			],
			[
				"dci",
				"dciTarget"
			],
			[
				"on",
				"onChange"
			],
			[
				"selected",
				"selectedItem"
			],
			[
				"sele",
				"selectedItem"
			],
			[
				"get",
				"getFilteredList"
			],
			[
				"item",
				"itemList"
			],
			[
				"to",
				"toLowerCase"
			],
			[
				"dropd",
				"dropdownItems"
			],
			[
				"dro",
				"dropdownItems"
			],
			[
				"from",
				"fromClick"
			],
			[
				"n",
				"netxms-list"
			],
			[
				"netxms",
				"netxmsObjectList"
			],
			[
				"opt",
				"optionSegments"
			],
			[
				"al",
				"alarmSource"
			],
			[
				"alarm",
				"alarmSourceId"
			],
			[
				"target",
				"targetId"
			],
			[
				"jS",
				"jsonData"
			],
			[
				"param",
				"parameters"
			],
			[
				"object",
				"objectIds"
			],
			[
				"objec",
				"objectIds"
			],
			[
				"ob",
				"objectIds"
			],
			[
				"node",
				"ng-model"
			],
			[
				"X",
				"X-SessionId"
			],
			[
				"data",
				"datasource"
			],
			[
				"sess",
				"sessionId"
			],
			[
				"ses",
				"sessionId"
			],
			[
				"a",
				"authentication"
			],
			[
				"session",
				"sessionId"
			],
			[
				"j",
				"json"
			],
			[
				"json",
				"jsonData"
			],
			[
				"SQL",
				"SQLQuery"
			],
			[
				"draw",
				"drawImageFromChart"
			],
			[
				"scr",
				"scrollHeight"
			]
		]
	},
	"buffers":
	[
		{
			"file": "datasource.js",
			"settings":
			{
				"buffer_size": 3548,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "directives.js",
			"settings":
			{
				"buffer_size": 4742,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "angular.module('grafana.directives').directive('netxmsList', function($compile, $sce) {\n    var inputTemplate = '<input type=\"text\" data-provide=\"typeahead\" ' +\n      ' class=\"gf-form-input input-medium\"' +\n      ' spellcheck=\"false\" style=\"display:none\"></input>';\n\n    var linkTemplate = '<a class=\"gf-form-label\" ng-class=\"segment.cssClass\" ' +\n      'tabindex=\"1\" give-focus=\"segment.focus\" ng-bind-html=\"segment.html\"></a>';\n\n    var selectTemplate = '<a class=\"gf-form-input gf-form-input--dropdown\" ng-class=\"segment.cssClass\" ' +\n      'tabindex=\"1\" give-focus=\"segment.focus\" ng-bind-html=\"segment.html\"></a>';\n\n    return {\n      scope: {\n        segment: \"=\",\n        getOptions: \"&\",\n        onChange: \"&\",\n      },\n      link: function($scope, elem, attrs) {\n        var $input = $(inputTemplate);\n        var $button = $(attrs.styleMode === 'select' ? selectTemplate : linkTemplate);\n        var segment = $scope.segment;\n        var options = null;\n        var cancelBlur = null;\n        var linkMode = true;\n\n        $input.appendTo(elem);\n        $button.appendTo(elem);\n\n        $scope.updateVariableValue = function(value) {\n          console.log(\"updateVariableValue\");\n          console.log(value);\n          if (value === '' || segment.value === value) {\n            return;\n          }\n\n          $scope.$apply(function() {\n            console.log($scope.altSegments);\n            var selected = _.find($scope.altSegments, {value: value});\n            if (selected) {\n              segment.value = selected.value;\n              segment.html = selected.html;\n              segment.fake = false;\n              segment.expandable = selected.expandable;\n            }\n            else if (segment.custom !== 'false') {\n              segment.value = value;\n              segment.html = $sce.trustAsHtml(value);\n              segment.expandable = true;\n              segment.fake = false;\n            }\n            console.log(segment);\n            $scope.onChange();\n          });\n        };\n\n        $scope.switchToLink = function(fromClick) {\n          if (linkMode && !fromClick) { return; }\n\n          clearTimeout(cancelBlur);\n          cancelBlur = null;\n          linkMode = true;\n          $input.hide();\n          $button.show();\n          console.log($input);\n          $scope.updateVariableValue($input.val());\n        };\n\n        $scope.inputBlur = function() {\n          // happens long before the click event on the typeahead options\n          // need to have long delay because the blur\n          cancelBlur = setTimeout($scope.switchToLink, 200);\n        };\n\n        $scope.source = function(query, callback) {\n          $scope.$apply(function() {\n            $scope.getOptions({ measurementFilter: query }).then(function(altSegments) {\n              $scope.altSegments = altSegments;\n              options = _.map($scope.altSegments, function(alt) { return alt.text });\n\n              // add custom values\n              if (segment.custom !== 'false') {\n                if (!segment.fake && _.indexOf(options, segment.value) === -1) {\n                  options.unshift(segment.value);\n                }\n              }\n              callback(options);\n            });\n          });\n        };\n\n        $scope.updater = function(value) {\n          if (value === segment.value) {\n            clearTimeout(cancelBlur);\n            $input.focus();\n            return value;\n          }\n\n          $input.val(value);\n          $scope.switchToLink(true);\n\n          return value;\n        };\n\n        $scope.matcher = function(item) {\n          var str = this.query;\n          if (str[0] === '/') { str = str.substring(1); }\n          if (str[str.length - 1] === '/') { str = str.substring(0, str.length-1); }\n          try {\n            return item.toLowerCase().match(str.toLowerCase());\n          } catch(e) {\n            return false;\n          }\n        };\n\n        $input.attr('data-provide', 'typeahead');\n        $input.typeahead({ source: $scope.source, minLength: 0, items: 10000, updater: $scope.updater, matcher: $scope.matcher });\n        console.log($input);\n\n        var typeahead = $input.data('typeahead');\n        typeahead.lookup = function () {\n          this.query = this.$element.val() || '';\n          var items = this.source(this.query, $.proxy(this.process, this));\n          return items ? this.process(items) : items;\n        };\n\n        $button.keydown(function(evt) {\n          // trigger typeahead on down arrow or enter key\n          if (evt.keyCode === 40 || evt.keyCode === 13) {\n            $button.click();\n          }\n        });\n\n        $button.click(function() {\n          options = null;\n          $input.css('width', ($button.width() + 16) + 'px');\n\n          $button.hide();\n          $input.show();\n          $input.focus();\n\n          linkMode = false;\n\n          var typeahead = $input.data('typeahead');\n          if (typeahead) {\n            $input.val('');\n            typeahead.lookup();\n          }\n        });\n\n        $input.blur($scope.inputBlur);\n\n        $compile(elem.contents())($scope);\n      }\n    };\n  });\n\n  angular.module('grafana.directives').directive('netxmsObjectList', function(uiSegmentSrv, $q) {\n    return {\n      template: '<netxms-list segment=\"segment\" get-options=\"getOptionsInternal()\" on-change=\"onSegmentChange()\"></netxms-list>',\n      restrict: 'E',\n      scope: {\n        property: \"=\",\n        options: \"=\",\n        getOptions: \"&\",\n        onChange: \"&\",\n      },\n      link: {\n        pre: function postLink($scope, elem, attrs) {\n\n          $scope.valueToSegment = function(value) {\n            var option = _.find($scope.options, {value: value});\n            console.log(\"valueToSegment\");\n            console.log(value);\n            var segment = {\n              cssClass: attrs.cssClass,\n              custom: attrs.custom,\n              value: option ? option.text : value,\n            };\n            console.log(\"Segment: \" );\n            console.log(segment);\n            return uiSegmentSrv.newSegment(segment);\n          };\n\n          $scope.getOptionsInternal = function() {\n            console.log(\"getOptionsInternal\");\n            if ($scope.options) {\n              var optionSegments = _.map($scope.options, function(option) {\n                return uiSegmentSrv.newSegment({value: option.text});\n              });\n              return $q.when(optionSegments);\n            } else {\n              console.log(\"getOptions\");\n              return $scope.getOptions();\n            }\n          };\n\n          $scope.onSegmentChange = function() {\n            console.log(\"onSegmentChange\");\n            if ($scope.options) {\n              var option = _.find($scope.options, {text: $scope.segment.value});\n              if (option && option.value !== $scope.property) {\n                $scope.property = option.value;\n              } else if (attrs.custom !== 'false') {\n                $scope.property = $scope.segment.value;\n              }\n            } else {\n              console.log($scope.segment);\n              $scope.property = $scope.segment.value;\n            }\n\n            // needs to call this after digest so\n            // property is synced with outerscope\n            $scope.$$postDigest(function() {\n              $scope.$apply(function() {\n                $scope.onChange();\n              });\n            });\n          };\n\n          $scope.segment = $scope.valueToSegment($scope.property);\n        }\n      }\n    };\n  });\n\n/*angular.module('grafana.directives').directive(\"netxmsObjectList\", function(uiSegmentSrv, $q) {\n    return {\n      template: '<metric-segment segment=\"segment\" get-options=\"getOptionsInternal()\" on-change=\"onSegmentChange()\"></metric-segment>',\n      restrict: 'E',\n      scope: {\n        property: \"=\",\n        options: \"=\",\n        getOptions: \"&\",\n        onChange: \"&\",\n      },\n      link: {\n        pre: function postLink($scope, elem, attrs) {\n\n          $scope.valueToSegment = function(value) {\n            console.log(\"valueToSegment\");\n            console.log(value);\n            var segment = {\n              custom: value,\n              value: value ? value.text : '',\n            };\n            console.log(\"Segment: \" );\n            console.log(segment);\n            return uiSegmentSrv.newSegment(segment);\n          };\n\n          $scope.getOptionsInternal = function() {\n            console.log(\"getOptionsInternal\");\n            if ($scope.options) {\n              console.log(\"scope.options\");\n              var optionSegments = _.map($scope.options, function(option) {\n                return uiSegmentSrv.newSegment({value: option.text});\n              });\n              console.log(\"optionsSegments: \");\n              console.log(optionSegments);\n              return $q.when(optionSegments);\n            } else {\n              console.log(\"getOptions\");\n              return $scope.getOptions();\n            }\n          };\n\n          $scope.onSegmentChange = function() {\n            console.log(\"onSegmentChange\");\n            if ($scope.options) {\n              console.log(\"scope.options\");\n              var option = _.find($scope.options, {text: $scope.segment.value});\n              if (option && option.value !== $scope.property) {\n                $scope.property = option.value;\n              } else if (attrs.custom !== 'false') {\n                $scope.property = $scope.segment.value;\n              }\n            } else {\n              console.log($scope.segment);\n              $scope.property = { text: $scope.segment.text, value: $scope.segment.value };\n            }\n\n            // needs to call this after digest so\n            // property is synced with outerscope\n            $scope.$$postDigest(function() {\n              $scope.$apply(function() {\n                $scope.onChange();\n              });\n            });\n          };\n\n          $scope.segment = $scope.valueToSegment($scope.property);\n        }\n      }\n    };\n});*/",
			"settings":
			{
				"buffer_size": 9937,
				"line_ending": "Unix"
			}
		},
		{
			"file": "query_ctrl.js",
			"settings":
			{
				"buffer_size": 1275,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "module.js",
			"settings":
			{
				"buffer_size": 643,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/sviests/go/src/github.com/grafana/grafana/data/plugins/datasources/NetXMS/package.json",
			"settings":
			{
				"buffer_size": 1288,
				"line_ending": "Unix"
			}
		},
		{
			"file": "partials/query.editor.html",
			"settings":
			{
				"buffer_size": 2152,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "<query-editor-row query-ctrl=\"ctrl\" class=\"netxms-datasource-query-row\" has-text-edit-mode=\"true\">\n  <div class=\"gf-form max-width-8\">\n    <select class=\"gf-form-input\" ng-model=\"ctrl.target.type\" ng-options=\"f as f for f in ['DCI', 'Alarms']\" ng-change=\"ctrl.onSelectionChange()\"></select>\n  </div>\n  <div ng-if=\"!(ctrl.target.type === 'DCI')\">\n    <div class=\"gf-form max-width-40\">\n      <label class=\"gf-form-label query-keyword width-5\">Source</label>\n      <netxms-object-list input-placeholder=\"Select alarm source object\" name=\"alarmSource\" selected-item=\"ctrl.target.alarmSource\"\n       get-list=\"ctrl.getSourceObjects()\" on-selection=\"ctrl.onSelectionChange()\"></netxms-object-list>\n    </div>\n  </div>\n\n  <div ng-if=\"ctrl.target.type === 'DCI'\">\n    <div class=\"gf-form-inline\">\n      <div class=\"gf-form max-width-40\">\n        <label class=\"gf-form-label query-keyword width-5\">Target</label>\n        <netxms-object-list input-placeholder=\"Select data collection target\" name=\"dciTarget\" selected-item=\"ctrl.target.dciTarget\"\n         get-list=\"ctrl.getObjects()\" on-selection=\"ctrl.clearDciField()\"></netxms-object-list>\n      </div>\n    </div>\n    <div class=\"gf-form-inline\">\n        <div class=\"gf-form max-width-40\">\n          <label class=\"gf-form-label query-keyword width-4\">DCI</label>\n          <netxms-object-list input-placeholder=\"Select data collection item\" name=\"dci\" selected-item=\"ctrl.target.dci\"\n           get-list=\"ctrl.getDCIs()\" on-selection=\"ctrl.onSelectionChange()\"></netxms-object-list>\n        </div>\n    </div>\n    <div class=\"gf-form-inline\">\n        <div class=\"gf-form width-20\">\n          <label class=\"gf-form-label query-keyword width-5\">Legend</label>\n          <div class=\"netxms-object-list\"> \n          <input type=\"text\" class=\"gf-form-input input-medium\" ng-model=\"ctrl.target.legend\" ng-change=\"ctrl.onSelectionChange()\" placeholder=\"Enter custom legend\"></input>\n          </div>\n        </div>\n    </div>\n  </div>\n</query-editor-row>",
			"settings":
			{
				"buffer_size": 1990,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "P",
		"selected_items":
		[
			[
				"P",
				"Package Control: Add Channel"
			],
			[
				"install",
				"Install Package Control"
			]
		],
		"width": 401.0
	},
	"console":
	{
		"height": 120.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/sviests/go/src/github.com/grafana/grafana/data/plugins/datasources/NetXMS",
		"/home/sviests/go/src/github.com/grafana/grafana/data/plugins/datasources/NetXMS/src",
		"/home/sviests/go/src/github.com/grafana/grafana/data/plugins/datasources/NetXMS/src/css",
		"/home/sviests/go/src/github.com/grafana/grafana/data/plugins/datasources/NetXMS/src/partials"
	],
	"file_history":
	[
		"/home/sviests/go/src/github.com/grafana/grafana/data/plugins/datasources/NetXMS/src/css/query-editor.css",
		"/home/sviests/go/src/github.com/grafana/grafana/data/plugins/datasources/NetXMS/src/autosize-input.js",
		"/home/sviests/go/src/github.com/grafana/grafana/data/plugins/datasources/NetXMS/src/partials/netxms_objectList_temp.html",
		"/home/sviests/netXMS/netxms/include/netxms-version.h",
		"/home/sviests/go/src/github.com/grafana/grafana/data/plugins/datasources/NetXMS/node_modules/traceur/src/codegeneration/AnnotationsTransformer.js",
		"/home/sviests/.m2/repository/org/netxms/netxms-client/2.1-M3/netxms-client-2.1-M3.pom",
		"/home/sviests/Desktop/J31872",
		"/home/sviests/Desktop/netxms-datasource/NetXMS/src/partials/query.editor.html",
		"/home/sviests/Desktop/netxms-datasource/NetXMS/src/query_ctrl.js",
		"/home/sviests/go/src/github.com/grafana/grafana/data/plugins/datasources/NetXMS/src/plugin.json",
		"/home/sviests/.cache/.fr-A6ZZQ2/jacek-pulit-angular-elastic-input-5968e00/src/angular-elastic-input.js",
		"/home/sviests/Documents/install",
		"/home/sviests/go/src/github.com/grafana/grafana/data/plugins/datasources/NetXMS/spec/datasource_spec.js",
		"/home/sviests/go/src/github.com/grafana/grafana/data/plugins/datasources/NetXMS/spec/test-main.js",
		"/home/sviests/tteesed.xml",
		"/home/sviests/netXMS/netxms/ChangeLog",
		"/home/sviests/netXMS/netxms/src/server/core/node.cpp",
		"/home/sviests/netXMS/netxms/sql/schema.in",
		"/home/sviests/netXMS/netxms/include/netxmsdb.h",
		"/home/sviests/netXMS/netxms/src/server/tools/nxdbmgr/upgrade.cpp",
		"/home/sviests/netXMS/netxms/webui/webapp/DataCollection/src/org/netxms/ui/eclipse/datacollection/propertypages/InstanceDiscovery.java",
		"/home/sviests/netXMS/netxms/src/java/netxms-eclipse/DataCollection/src/org/netxms/ui/eclipse/datacollection/propertypages/InstanceDiscovery.java",
		"/home/sviests/go/src/github.com/grafana/grafana/data/plugins/datasources/NetXMS/src/partials/query.options.html",
		"/home/sviests/.config/sublime-text-3/Packages/User/Grunt.sublime-build",
		"/home/sviests/go/src/github.com/grafana/grafana/data/plugins/datasources/NetXMS/src/datasource.js",
		"/home/sviests/go/src/github.com/grafana/grafana/data/plugins/datasources/NetXMS/src/query_ctrl.js",
		"/home/sviests/go/src/github.com/grafana/grafana/data/plugins/datasources/NetXMS/package.json",
		"/home/sviests/go/src/github.com/grafana/grafana/data/plugins/datasources/NetXMS/src/partials/query.editor.html",
		"/home/sviests/go/src/github.com/grafana/grafana/public/app/plugins/datasource/influxdb/plugin.json",
		"/home/sviests/go/src/github.com/grafana/grafana/data/plugins/datasources/simple-json-datasource-master/package.json",
		"/home/sviests/go/src/github.com/grafana/grafana/data/plugins/datasources/simple-json-datasource-master/src/query_ctrl.js",
		"/home/sviests/go/src/github.com/grafana/grafana/data/plugins/datasources/simple-json-datasource-master/src/plugin.json",
		"/home/sviests/go/src/github.com/grafana/grafana/data/plugins/datasources/simple-json-datasource-master/src/datasource.js",
		"/home/sviests/go/src/github.com/grafana/grafana/data/plugins/datasources/simple-json-datasource-master/README.md",
		"/home/sviests/go/src/github.com/grafana/grafana/data/plugins/datasources/simple-json-datasource-master/.jscs.json",
		"/home/sviests/go/src/github.com/grafana/grafana/data/plugins/datasources/simple-json-datasource-master/LICENSE",
		"/home/sviests/go/src/github.com/grafana/grafana/data/plugins/datasources/simple-json-datasource-master/Gruntfile.js",
		"/home/sviests/go/src/github.com/grafana/grafana/data/plugins/datasources/simple-json-datasource-master/src/module.js",
		"/home/sviests/go/src/github.com/grafana/grafana/data/plugins/datasources/simple-json-datasource-master/src/css/query-editor.css",
		"/home/sviests/go/src/github.com/grafana/grafana/data/plugins/datasources/simple-json-datasource-master/src/partials/query.editor.html",
		"/home/sviests/go/src/github.com/grafana/grafana/data/plugins/datasources/simple-json-datasource-master/src/partials/annotations.editor.html",
		"/home/sviests/go/src/github.com/grafana/grafana/data/plugins/datasources/simple-json-datasource-master/src/partials/config.html",
		"/home/sviests/go/src/github.com/grafana/grafana/data/plugins/datasources/simple-json-datasource-master/src/partials/query.options.html",
		"/home/sviests/Downloads/fake-simple-json-datasource-master/index.js",
		"/home/sviests/go/src/github.com/grafana/grafana/public/app/core/services/backend_srv.ts",
		"/home/sviests/Desktop/WorkingAlarms.js",
		"/home/sviests/Downloads/fake-simple-json-datasource-master/series.json",
		"/home/sviests/Downloads/simple-json-datasource-master/src/datasource.js",
		"/home/sviests/go/src/github.com/grafana/grafana/public/app/plugins/datasource/graphite/query_ctrl.ts",
		"/home/sviests/go/src/github.com/grafana/grafana/public/app/plugins/datasource/graphite/partials/query.editor.html",
		"/home/sviests/go/src/github.com/grafana/grafana/data/plugins/simple-json-datasource-master/src/datasource.js",
		"/home/sviests/go/src/github.com/grafana/grafana/public/app/plugins/datasource/influxdb/query_part.ts",
		"/home/sviests/go/src/github.com/grafana/grafana/public/app/plugins/datasource/opentsdb/config_ctrl.ts",
		"/home/sviests/go/src/github.com/grafana/grafana/public/app/plugins/datasource/prometheus/partials/query.editor.html",
		"/home/sviests/go/src/github.com/grafana/grafana/public/app/plugins/datasource/prometheus/query_ctrl.ts",
		"/home/sviests/go/src/github.com/grafana/grafana/public/app/plugins/datasource/cloudwatch/query_ctrl.ts",
		"/home/sviests/Desktop/workingTest.js",
		"/home/sviests/Desktop/test.json",
		"/home/sviests/Desktop/test1.json",
		"/home/sviests/Desktop/untitled.json",
		"/home/sviests/Desktop/datasources/simple-json-datasource-master/src/datasource.js",
		"/home/sviests/go/src/github.com/grafana/grafana/data/plugins/datasources/simple-json-datasource-master/dist/datasource.js.map",
		"/home/sviests/go/src/github.com/grafana/grafana/data/plugins/datasources/simple-json-datasource-master/dist/datasource.js",
		"/tmp/epiphany-sviests-85klbf/viewsource5GE9WY.html",
		"/home/sviests/grafana/src/github.com/grafana/grafana/public_gen/app/features/panel/metrics_panel_ctrl.ts",
		"/home/sviests/grafana/src/github.com/grafana/grafana/public/app/features/panel/metrics_panel_ctrl.ts",
		"/home/sviests/grafana/src/github.com/grafana/grafana/public/app/plugins/panel/table/module.ts",
		"/home/sviests/grafana/src/github.com/grafana/grafana/data/plugins/datasources/simple-json-datasource-master/src/partials/query.editor.html",
		"/home/sviests/grafana/src/github.com/grafana/grafana/data/plugins/datasources/simple-json-datasource-master/spec/datasource_spec.js",
		"/home/sviests/grafana/src/github.com/grafana/grafana/public/app/core/services/backend_srv.ts",
		"/home/sviests/grafana/src/github.com/grafana/grafana/data/plugins/datasources/simple-json-datasource-master/src/partials/config.html",
		"/home/sviests/grafana/src/github.com/grafana/grafana/data/plugins/datasources/simple-json-datasource-master/src/datasource.js",
		"/home/sviests/grafana/src/github.com/grafana/grafana/data/plugins/datasources/simple-json-datasource-master/src/query_ctrl.js",
		"/home/sviests/grafana/src/github.com/grafana/grafana/data/plugins/datasources/simple-json-datasource-master/src/module.js",
		"/home/sviests/Desktop/datasources/simple-json-datasource-master/package.json",
		"/home/sviests/grafana/src/github.com/grafana/grafana/public_gen/app/features/panel/metrics_panel_ctrl.d.ts",
		"/home/sviests/Downloads/epp2.xml",
		"/home/sviests/netXMS/netxms/src/server/nxapisrv/java/src/main/java/org/netxms/websvc/handlers/Sessions.java",
		"/home/sviests/netXMS/netxms/src/server/nxapisrv/java/src/main/java/org/netxms/websvc/WebSvcStatusService.java",
		"/home/sviests/netXMS/netxms/src/server/nxapisrv/java/src/main/java/org/netxms/websvc/handlers/Alarms.java",
		"/home/sviests/grafana/src/github.com/grafana/grafana/node_modules/har-validator/lib/schemas/index.js",
		"/home/sviests/grafana/src/github.com/grafana/grafana/public/app/plugins/panel/table/renderer.ts",
		"/home/sviests/grafana/src/github.com/grafana/grafana/public/app/plugins/panel/table/editor.ts",
		"/home/sviests/grafana/src/github.com/grafana/grafana/public/app/plugins/panel/table/transformers.ts",
		"/home/sviests/grafana/src/github.com/grafana/grafana/public/app/plugins/datasource/influxdb/query_ctrl.ts",
		"/home/sviests/grafana/src/github.com/grafana/grafana/public/app/plugins/datasource/influxdb/partials/query.editor.html",
		"/home/sviests/grafana/src/github.com/grafana/grafana/data/plugins/datasources/simple-json-datasource-master/src/css/query-editor.css",
		"/home/sviests/grafana/src/github.com/grafana/grafana/public/app/plugins/datasource/graphite/datasource.ts",
		"/home/sviests/netXMS/netxms/src/server/nxapisrv/java/src/main/java/org/netxms/websvc/WebSvcApplication.java",
		"/home/sviests/grafana/src/github.com/grafana/grafana/public/app/plugins/datasource/graphite/specs/datasource_specs.ts",
		"/home/sviests/grafana/src/github.com/grafana/grafana/public/app/plugins/datasource/influxdb/datasource.ts",
		"/home/sviests/netXMS/netxms/src/server/nxapisrv/java/src/main/java/org/netxms/websvc/handlers/AbstractHandler.java",
		"/home/sviests/netXMS/netxms/src/server/nxapisrv/java/src/main/java/org/netxms/websvc/SessionToken.java",
		"/home/sviests/netXMS/netxms/src/server/nxapisrv/java/src/main/java/org/netxms/websvc/SessionStore.java",
		"/home/sviests/grafana/src/github.com/grafana/grafana/public/app/plugins/datasource/influxdb/partials/config.html",
		"/home/sviests/grafana/src/github.com/grafana/grafana/public/app/plugins/datasource/cloudwatch/config_ctrl.ts",
		"/home/sviests/grafana/src/github.com/grafana/grafana/public/app/plugins/datasource/opentsdb/config_ctrl.ts",
		"/home/sviests/grafana/src/github.com/grafana/grafana/public/app/plugins/datasource/elasticsearch/config_ctrl.ts",
		"/home/sviests/grafana/src/github.com/grafana/grafana/public/app/plugins/datasource/prometheus/datasource.ts",
		"/home/sviests/grafana/src/github.com/grafana/grafana/public/app/plugins/datasource/prometheus/module.ts",
		"/home/sviests/grafana/src/github.com/grafana/grafana/public/app/plugins/datasource/influxdb/query_builder.js",
		"/home/sviests/grafana/src/github.com/grafana/grafana/public/app/plugins/datasource/influxdb/module.ts",
		"/home/sviests/grafana/src/github.com/grafana/grafana/public/app/plugins/datasource/influxdb/response_parser.ts",
		"/home/sviests/grafana/src/github.com/grafana/grafana/public/app/plugins/datasource/influxdb/influx_series.js",
		"/home/sviests/grafana/src/github.com/grafana/grafana/public/app/plugins/datasource/cloudwatch/datasource.js",
		"/home/sviests/grafana/src/github.com/grafana/grafana/public/app/plugins/datasource/cloudwatch/datasource.d.ts",
		"/home/sviests/grafana/src/github.com/grafana/grafana/public/app/plugins/datasource/cloudwatch/query_ctrl.ts",
		"/home/sviests/grafana/src/github.com/grafana/grafana/public/app/plugins/datasource/cloudwatch/partials/config.html",
		"/home/sviests/grafana/src/github.com/grafana/grafana/public/app/plugins/datasource/opentsdb/partials/config.html",
		"/home/sviests/grafana/src/github.com/grafana/grafana/data/plugins/datasources/simple-json-datasource-master/Gruntfile.js",
		"/home/sviests/grafana/src/github.com/grafana/grafana/data/plugins/datasources/simple-json-datasource-master/src/plugin.json",
		"/home/sviests/grafana/src/github.com/grafana/grafana/data/plugins/datasources/simple-json-datasource-master/README.md",
		"/home/sviests/grafana/src/github.com/grafana/grafana/data/plugins/datasources/simple-json-datasource-master/LICENSE",
		"/home/sviests/grafana/src/github.com/grafana/grafana/data/plugins/datasources/simple-json-datasource-master/package.json",
		"/home/sviests/grafana/src/github.com/grafana/grafana/data/plugins/grafana/package.json",
		"/home/sviests/grafana/src/github.com/grafana/grafana/data/plugins/grafana/src/module.js",
		"/home/sviests/grafana/src/github.com/grafana/grafana/data/plugins/grafana/src/partials/config.html",
		"/home/sviests/Downloads/simple-json-datasource-master/README.md",
		"/home/sviests/grafana/src/github.com/grafana/grafana/public/app/plugins/datasource/opentsdb/plugin.json",
		"/home/sviests/grafana/src/github.com/grafana/grafana/public/app/plugins/datasource/opentsdb/module.ts",
		"/home/sviests/grafana/src/github.com/grafana/grafana/data/plugins/grafana/src/plugin.json",
		"/home/sviests/grafana/src/github.com/grafana/grafana/data/plugins/grafana/src/query_ctrl.js",
		"/home/sviests/grafana/src/github.com/grafana/grafana/data/plugins/grafana/src/config_ctrl.ts",
		"/home/sviests/grafana/src/github.com/grafana/grafana/data/plugins/grafana/src/datasource.js",
		"/home/sviests/grafana/src/github.com/grafana/grafana/data/plugins/grafana/spec/datasource_spec.js",
		"/home/sviests/grafana/src/github.com/grafana/grafana/data/plugins/grafana/build/config.gypi",
		"/home/sviests/grafana/src/github.com/grafana/grafana/data/plugins/grafana/Gruntfile.js",
		"/home/sviests/grafana/src/github.com/grafana/grafana/public/app/plugins/datasource/opentsdb/datasource.d.ts"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 90.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"<td",
			"<tr",
			".value",
			".text",
			"+",
			"\\n",
			"'",
			"filter",
			"defaultDropdownItems",
			"H_UpgradeFromV441",
			">>",
			">>>>",
			"target",
			"console.l",
			"trust",
			"$http",
			"], ",
			"\"",
			"  ",
			"\\n",
			"  ",
			"\\\\",
			"\"",
			"handleQueryResult",
			"metric",
			"then",
			"cookie",
			"issueQu",
			"query",
			"query(",
			"datasourceRequest",
			"EVENT_AP_ADOPTED",
			"SYS_IF_DIS",
			"event",
			">>",
			">",
			">>>",
			"H_UpgradeFromV438",
			"H_UpgradeFromV437",
			"LdapGroupUniqueId",
			"VALUES (",
			"trap_id",
			"VALUES (",
			"(script_id",
			",\n",
			"metadata",
			"guid",
			"items",
			"HEAD",
			">>>",
			">>>>>",
			"MAC address change detected on interface",
			"hen MAC address change detected on interface",
			"StatusPropagationAlgorithm",
			"statuspr",
			"statuspro",
			"statuspropog",
			"\")))",
			"CHK_EXEC(SQLQuery(_T(\"",
			"config",
			"delete",
			"drop",
			"remove",
			"SNMPPorts",
			">>>>>>",
			">>>>>>>>",
			">>>>>>>>>>>>>>>>>>>>>>>>>>>",
			"event_policy",
			">>>>>>>>>>",
			"\\n",
			"event_policy",
			"\\n",
			"/n",
			"/r/n",
			"/r",
			"/n/r",
			"/r/n",
			"updatesc",
			"event_policy",
			"event",
			"ResizeColumn",
			"g_feList",
			"char",
			"TransactionGroup",
			"int",
			"char",
			"PAN_LEN",
			"g_shutdownCondition",
			"CHK_EXEC(SQLQuery(_T(\"",
			"defaultinterface",
			"config_values",
			"alarm",
			"config",
			"S",
			"DefaultCommunityString",
			"config",
			"DataDirectory",
			"events",
			"H_UpgradeFromV425",
			"parameters",
			"dashboard",
			"summary",
			"TABLE conf",
			"config",
			"nodes",
			"objects",
			">>>>>>",
			">>>>>",
			"config",
			">>>>>",
			"template",
			"filer",
			"macro substitution",
			"dashboards-layout",
			"objects",
			"See detailed information",
			"understanding",
			"alarm_cat",
			"html2canvas",
			"H_UpgradeFromV419",
			"access",
			"ReportingServerHostname",
			"jira",
			"CreateConfigParam",
			"enable",
			"enablerep",
			"server",
			"EnableReportingServer"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"<td class=\"netxms\"",
			"<tr class=\"netxms\"",
			".name",
			"",
			"getList",
			"],\\n",
			"\\\"",
			" ",
			"\\",
			"\\\"",
			"VALUES ('',",
			"guid,trap_id",
			"VALUES ('',",
			"(guid,script_id",
			"",
			" ",
			"",
			"TCHAR",
			""
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": false
	},
	"groups":
	[
		{
			"selected": 3,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "datasource.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3548,
						"regions":
						{
						},
						"selection":
						[
							[
								3265,
								3265
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "directives.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4742,
						"regions":
						{
						},
						"selection":
						[
							[
								2121,
								2121
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 2,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9937,
						"regions":
						{
						},
						"selection":
						[
							[
								1391,
								1391
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "query_ctrl.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1275,
						"regions":
						{
						},
						"selection":
						[
							[
								408,
								408
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "module.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 643,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "/home/sviests/go/src/github.com/grafana/grafana/data/plugins/datasources/NetXMS/package.json",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1288,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JSON.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "partials/query.editor.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2152,
						"regions":
						{
						},
						"selection":
						[
							[
								416,
								416
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 7,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1990,
						"regions":
						{
						},
						"selection":
						[
							[
								1935,
								1935
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 111.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "NetXMS-grafana.sublime-project",
	"replace":
	{
		"height": 62.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/go/src/github.com/grafana/grafana/data/plugins/datasources/NetXMS/src/partials/query.editor.html"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 159.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
